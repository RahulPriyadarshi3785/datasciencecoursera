library(swirl)
swirl()
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <-  rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(x, y), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/o
0/0
Inf - Inf
x
play()
DT = data.table(x=c(1,NaN,NA,3), y=c(NA_integer_, 1:3), z=c("a", NA_character_, "b", "c"))
y <- x
na.omit(y)
y
na.omit(DT, cols="x")
na.omit(y, cols="y")
nxt()
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)
]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect) <- c("foo" , "bar", "norf")
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo" , "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")
]
my_vector <- seq(1, 20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (seq(1,20), 4, 5)
my_matrix2 <- matrix(seq(1,20), 4, 5)
play()
my_matrix2 <- matrix(seq(1,20), nrow = 4, ncol = 5)
my_matrix2
args(matrix)
nxt()
identical(my_matrix, my_matrix2)
patients <- c(Bill, Gina, Kelly, Sean)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age",
| "weight", "bp", "rating", "test")
cnames <- c("patient", "age",
"weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
bye()
?`%in%`
1:10 %in% c(1,3,5,9)
?sample
x <- 1:10
sample(x[x >  8])
sample(x[x >  9])
q()
q()
lapply
x <- list(a = 1:5, b = rnorm(10))
x
?rnorm
x <-  list(a = 1:4, b = rnorm(10), c = rnorm(20,1), d = rnorm(100,5))
lapply(x, mean)
? runif
?rnorm
x <- 1:4
lapply(x, runif)
?rowSums
?rowsum
rowSums
x <- matrix(rnorm(200), 20, 10)
?quantile
args(quantile)
apply(x, 1, quantile, probs = c(0.25, 0.75))
?rowMeans
?mapply
?tapply
?gl
?split
?interaction
f1 <- gl(2,5)
f2 <-  gl(5,2)
interaction(f1,f2)
?str
str(1:12)
q()
?binom
?rbinom
choose(3,2)
?rbinom
q()
set.seed(1)
rpois(5, 2)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
q()
install.packages('RMySQL',type='source')
source('http://bioconductor.org/biocLite.R')
source("https://bioconductor.org/biocLite.R")
biocLite('rhdf5')
library(rhdf5)
library(XML)
library(RMySQL)
library(httr)
q()
library(data.table)
library(Hmisc)
library(plyr)
library(dplyr)
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_GDP.csv', skip = 4, nrows = 232))
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_EDSTATS_Country.csv'))
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_GDP.csv', skip = 4, nrows = 232))
y <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_EDSTATS_Country.csv'))
dt <- merge(x, y, by.x = 'X', by.y = 'CountryCode', all = TRUE)
dt1 <- arrange(dt, X.1)
dt2 <- group_by(dt1, Income.Group)
summarise(dt2, mean(X.1))
summarise(dt2, mean(X.1, na.rm = TRUE))
dt4 <- arrange(dt, desc(X.4))
dt4$X.4[38]
dt4$X.4[39]
dt4$X.4[40]
dt4$X.4
dt4 <- arrange(dt, desc(dt$X.4))
dt4$X.4
dt1$X.1
dt4 <- arrange(dt, desc(dt$X.4))
dt4$X.4
dtGDP <- x[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
dt <- merge(dtGDP, y, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
dt3 <- mutate(dt2, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt1, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt2, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt1, gdpGroup = cut2(X.1, g = 5))
dt4 <- group_by(dt3, Income.Group)
summarise(dt2, mean(X.1))
xt <- xtabs(Freq~Income.Group+gdpGroup, data = dt3)
xt <- xtabs(Freq ~ Income.Group + gdpGroup, data = dt3)
table(dt3$gdpGroup,dt3$Income.Group)
names(dt)
tolower(names(dt))
library(stringr)
library(lubridate)
library(swirl)
swirl()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- row()
this_moment <- row(this_day)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 7, minutes = 11)
this_moment <- update(this_moment, hours = 7, minutes = 13, seconds = 14)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <-  update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
play()
how_long
nxt()
as.period(how_long)
stopwatch()
stopwatch()
View(stopwatch)
View(stopwatch)
q()
library(data.table)
setwd('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project')
list.files()
list.files(recursive = TRUE)
test_data <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/test/X_test.txt'))
test_label <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/test/y_test.txt')
)
train_data <- <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/X_train.txt', header = TRUE))
train_data <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/X_train.txt', header = TRUE))
train_label <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/y_train.txt', header = TRUE))
train_data <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/X_train.txt', header = TRUE))
head(test_data)
test_data <- tbl_df(test_data)
library(dplyr)
test_data <- tbl_df(test_data)
test_label <- tbl_df(test_label)
train_data <- tbl_df(train_data)
train_label <- tbl_df(train_label)
test_data
dim(test_data)
dim(test_label)
dim(train_label)
dim(train_data)
names(test_data)
names(train_data)
names(test_label)
train_data <- <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/X_train.txt'))
train_label <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/y_train.txt'))
train_data <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/X_train.txt'))
train_data <- tbl_df(train_data)
train_label <- tbl_df(train_label)
dim(test_data)
dim(train_data)
names(train_data)
names(test_data)
subject_test <- tbl_df(data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/test/subject_test.txt')))
subject_train <- tbl_df(data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/subject_train.txt')))
total_data <- rbind(train_data, test_data)
total_label <- rbind(train_label, test_label)
subject_train
subject_test
subject <- rbind(subject_train, subject_test)
dim(total_data)
dim(total_label)
dim(subject)
features <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/feature.txt'))
features <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/features.txt'))
head(features)
dim(features)
head(features,10)
tail(features,10)
features <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/features.txt', row.names = 1))
head(features)
features1 <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/features.txt'))
meanStdIndices <- grep('mean/(/)|std/(/)', features['V2'])
meanStdIndices <- grep('mean/(/)|std/(/)', features[,'V2'])
head(features[,'V2'])
length(meanStdIndices)
meanStdIndices <- grep('mean//(//)|std//(//)', features[,'V2'])
length(meanStdIndices)
meanStdIndices
meanStdIndices <- grep('mean\(\)|std\(\)', features[,'V2'])
meanStdIndices <- grep('mean\\(\\)|std\\(\\)', features[,'V2'])
length(meanStdIndices)
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 1])
length(meanStdIndices)
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features1[, 2])
length(meanStdIndices)
features1 <- read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/features.txt')
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features1[, 2])
length(meanStdIndices)
meanStdIndices <- grep("mean\(\)|std\(\)", features1[, 2])
head(features1)
meanStdIndices
total_data <- total_data[,meanStdIndices]
dim(total_data)
names(total_data)
head(features1)
names(total_data) <- gsub('mean','Mean',features1[meanStdIndices,2])
names(total_data) <- gsub('std','Std',features1[meanStdIndices,2])
names(total_data) <- gsub('\\(\\)','',features1[meanStdIndices,2])
names(total_data) <- gsub('mean','Mean',names(total_data))
names(total_data) <- gsub('std','Std',names(total_data))
names(total_data) <- gsub('-','',names(total_data))
activity <- read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt')
head(activity)
activity <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt', row.names = 1))
head(activity)
dim(activity)
activity <- tolower(gsub('_','',activity))
head(activity)
head(activity)
activity <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt', row.names = 1))
activity <- tolower(gsub('_','',activity))
activity
activity <- read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt', row.names = 1)
activity
activity <- tolower(gsub('_','',activity))
activity
activity <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt', row.names = 1))
activity
activity <- tolower(gsub('_','',activity[,1]))
activity
activity <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt', row.names = 1))
activity
activity[,1] <- tolower(gsub('_','',activity[,1]))
activity
activity <- read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt')
activity[,2] <- tolower(gsub('_','',activity[,2]))
activity
activity <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt'))
activity[,2] <- tolower(gsub('_','',activity[,2]))
activity
activity <- read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/activity_labels.txt',row.names = 1)
activity
activity[,'V2'] <- tolower(gsub('_','',activity[,'V2']))
activity
?data.table
activity
head(total_label)
total_label
dim(total_label)
dim(activity)
unique(total_label)
total_label[,1] <- activity[total_label[,1],1]
total_label[,1] <- activity[total_label[,1],1]
unique(total_label)
activity
class(activity)
class(total_label)
total_label[,1]
activity1 <- tbl_df(activity)
total_label[,1] <- activity[total_label[,1],1]
total_label %>% select(V1) <- activity[total_label %>% select(V1),1]
total_label %>% select(V1) <- activity[[total_label %>% select(V1),1]]
total_label[,'V1'] <- activity[total_label[,'V1'],'V2']
total_label$V1 <- activity[total_label$V1,'V2']
total_label[,'V1'] <- activity[total_label[[,'V1']],'V2']
total_label[,'V1'] <- activity[total_label[[:,'V1']],'V2']
total_label[,'V1'] <- activity[total_label[['V1']],'V2']
total_label
train_label <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/train/y_train.txt'))
test_label <- data.table(read.table('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Project/UCI HAR Dataset/test/y_test.txt')
)
train_label <- tbl_df(train_label)
test_label <- tbl_df(test_label)
total_label <- rbind(train_label, test_label)
dim(total_label)
unique(total_label)
total_label$V1 <- activity[total_label$V1,'V2']
total_label
names(total_label)
names(total_label) <- 'activity'
names(total_label)
subject
names(subject) <- 'subject'
cleanData <- cbind(subject, total_label, total_data)
dim(cleanData)
write.table(cleanData, 'mergeCleanDataAssignment.txt')
write.table(cleanData,"mergeCleanDataAssignmentPeer.txt",sep="\t",row.names=FALSE)
table(subject)
names(cleanData)
colnames(cleanData)
unique(subject)[, 1]
as.vector(unique(subject)[, 1])
length(unique(subject)[, 1])
dim(unique(subject)[, 1])
cleanData
cleanData1 <- tbl_df(cleanData)
cleanData1
length(subject)
dim(subject)
dim(unique(subject))
dim(activity)
dim(cleanData)
names(rslt) <- names(cleanData)
sort(unique(subject)[, 1])
sort(unique(subject)
)
unique(subject)
sort(unique(subject))
sort(unique(subject[,1]))
subject1 <- as.data.frame(subject)
class(subject)
class(subject_test)
sort(unique(subject$V1))
subject
unique(subject$V1)
unique(subject)
subject %>% unique() %>% arrange(V1)
subject %>% unique() %>% arrange(subject)
subject %>% unique() %>% arrange(subject)[10]
subject %>% unique() %>% arrange(subject)[10,]
subject %>% unique() %>% arrange(subject) %>% filter(10)
subject %>% unique() %>% arrange(subject) %>% filter(subject == 10)
class(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))
subject %>% unique() %>% arrange(subject) %>% filter(subject == 10) %>% select(subject)
as.vector(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10) %>% select(subject))
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10) %>% select(subject))
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))
as.vector(as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10)))
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))[1,1]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))[1]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))[[1]]
subject %>% unique() %>% arrange(subject) %>% filter(subject == 10) %>% select(subject)[[1]]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 10))[[1]]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 1:30))[[]]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == 1:30))[[1:30]]
as.list(subject %>% unique() %>% arrange(subject) %>% filter(subject == numeric()))[[1:30]]
subject <- as.data.frame(subject)
subject
sort(unique(joinSubject)[, 1])
sort(unique(Subject)[, 1])
sort(unique(subject)[, 1])
sort(unique(subject)[, 1])
sort(unique(subject)[, 1])[10]
activity[1,2]
activity[1,1]
activity[1]
subjectLength <- length(table(subject))
activityLength <- dim(activity)[1]
varLength <- dim(cleanData)[2]
rslt <- as.data.frame(matrix(NA, nrow = activityLength * subjectLength, ncol = varLength))
names(rslt) <- names(cleanData)
row <- 1
for(i in 1:subjectLength){
for(j in 1:activityLength){
rslt[row, 1] <- i
rslt[row, 2] <- activity[j, 1]
rslt[row, 3:varLength] <- colMeans(cleanData[i == cleanData$subject & activity[j, 1] == cleanData$activity, 3:varLength])
row <- row + 1
}
}
head(rslt)
write.table(rslt, 'FinalResultMeanMatrix.txt', sep = '\t', row.names = FALSE)
rslt
dim(test_data)
dim(test_label)
dim(train_label)
dim(train_data)
dim(cleanData)[2]
dim(cleanData)
dim(total_data)
length(meanStdIndices)
dim(total_label)
dim(subject)
dim(activity)
q()
