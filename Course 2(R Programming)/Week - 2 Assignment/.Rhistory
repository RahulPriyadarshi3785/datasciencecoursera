even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
if(TRUE){
odd<-t.d[t.d[[1]]%%2,1]
even<-t.d[t.d[[1]]%%2 == 0,1]
odd<-c(odd,t.d[t.d[[2]]%%2,2])
even<-c(even,t.d[t.d[[2]]%%2 == 0,2])
odd<-c(odd,t.d[t.d[[3]]%%2==1,3])
even<-c(even,t.d[t.d[[3]]%%2 == 0,3])
}
t.d
odd
even
m[m%%2 == 1]
m[m%%2 == 0]
t.d[t.d[[1]]%%2==1
odd<-c()
even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
if(TRUE){
odd<-t.d[t.d[[1]]%%2,1]
even<-t.d[t.d[[1]]%%2 == 0,1]
odd<-c(odd,t.d[t.d[[2]]%%2,2])
even<-c(even,t.d[t.d[[2]]%%2 == 0,2])
odd<-c(odd,t.d[t.d[[3]]%%2==1,3])
even<-c(even,t.d[t.d[[3]]%%2 == 0,3])
}
t.d
odd
even
m[m%%2 == 1]
m[m%%2 == 0]
t.d[t.d[[1]]%%2==1
odd<-c()
even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
if(TRUE){
odd<-t.d[t.d[[1]]%%2,1]
even<-t.d[t.d[[1]]%%2 == 0,1]
odd<-c(odd,t.d[t.d[[2]]%%2,2])
even<-c(even,t.d[t.d[[2]]%%2 == 0,2])
odd<-c(odd,t.d[t.d[[3]]%%2==1,3])
even<-c(even,t.d[t.d[[3]]%%2 == 0,3])
}
t.d
odd
even
m[m%%2 == 1]
m[m%%2 == 0]
v <- t.d[t.d[[1]]%%2==1
odd<-c()
even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
if(TRUE){
odd<-t.d[t.d[[1]]%%2,1]
even<-t.d[t.d[[1]]%%2 == 0,1]
odd<-c(odd,t.d[t.d[[2]]%%2,2])
even<-c(even,t.d[t.d[[2]]%%2 == 0,2])
odd<-c(odd,t.d[t.d[[3]]%%2==1,3])
even<-c(even,t.d[t.d[[3]]%%2 == 0,3])
}
t.d
odd
even
m[m%%2 == 1]
m[m%%2 == 0]
class(t.d[t.d[[1]]%%2==1)
odd<-c()
even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
if(TRUE){
odd<-t.d[t.d[[1]]%%2,1]
even<-t.d[t.d[[1]]%%2 == 0,1]
odd<-c(odd,t.d[t.d[[2]]%%2,2])
even<-c(even,t.d[t.d[[2]]%%2 == 0,2])
odd<-c(odd,t.d[t.d[[3]]%%2==1,3])
even<-c(even,t.d[t.d[[3]]%%2 == 0,3])
}
t.d
odd
even
m[m%%2 == 1]
m[m%%2 == 0]
even<-c()
for(i in 1:ncol(t.d)){
odd<-c(odd,t.d[t.d[[i]]%%2==1,i])
even<-c(even,t.d[t.d[[i]]%%2 == 0,i])
}
t.d[[1]]%%2==1
t.d
t.d
t.d[[1]]%%2==1
t.d[t.d[[1]]%%2==1,1]
q()
cat("Rahul","Priyadarshi")
cat("Rahul","Priyadarshi",sep="-")
typeof(x)
typeof(cat("Rahul","Priyadarshi"))
typeof(x)
typeof(8)
typeof(1:4)
x<-c("Rahul","Richa")
subsplit("Rahul","")
strsplit("Rahul","")
strsplit(x,"")
q()
adv <- rnorm(30,400,200)
sales <- rnorm(30,4000,1000)
plot(sales~adv)
plot(sales~adv, type = "p")
plot(sales~adv)
plot(sales~adv, type = "p")
plot(adv,sales)
plot(sales~adv,main = "Sales vs. Advertising Expenses")
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab <- "Advertising Expenses",
ylab <- "Sales in Thousands")
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands")
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
xlim = c(200,600))
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
ylim = c(3000,4000))
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
font.main = 4)
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
font.main = 1)
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
font.main = 5)
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
font.main = 5, col = red)
plot(sales~adv,main = "Sales vs. Advertising Expenses",
xlab = "Advertising Expenses",
ylab = "Sales in Thousands",
font.main = 5, col = "red")
colors()
q()
1.07^2
1.07^80
(1.07^80)*2
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("Rcpp")
find.package("KernSmooth")
library(KernSmooth)
exit
exit()
quit
quit()
clc
clear
clc()
clear()
available.packages()
a <- available.packages()
types(a)
type(a)
typeof(a)
a <- available.packages();
a <- available.packages();
quit()
find.package("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("ggplot2")
source("http::/bioconductor.org/biocLite.R")
load(ggplot2)
library(ggplot2)
search()
biocLite()
find_rtools()
find.package("devtools")
find_rtools()
install.packages("Rcpp")
install.packages("Rcpp")
find_rtools()
library(devtools)
find_rtools()
quit
quit()
q()
install.packages("swirl")
package_version("swirl")
package_version(swirl)
packageVersion(swirl)
packageVersion("swirl")
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <-  rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(x, y), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/o
0/0
Inf - Inf
x
play()
DT = data.table(x=c(1,NaN,NA,3), y=c(NA_integer_, 1:3), z=c("a", NA_character_, "b", "c"))
y <- x
na.omit(y)
y
na.omit(DT, cols="x")
na.omit(y, cols="y")
nxt()
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)
]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect) <- c("foo" , "bar", "norf")
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo" , "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")
]
my_vector <- seq(1, 20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (seq(1,20), 4, 5)
my_matrix2 <- matrix(seq(1,20), 4, 5)
play()
my_matrix2 <- matrix(seq(1,20), nrow = 4, ncol = 5)
my_matrix2
args(matrix)
nxt()
identical(my_matrix, my_matrix2)
patients <- c(Bill, Gina, Kelly, Sean)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age",
| "weight", "bp", "rating", "test")
cnames <- c("patient", "age",
"weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
bye()
?`%in%`
1:10 %in% c(1,3,5,9)
?sample
x <- 1:10
sample(x[x >  8])
sample(x[x >  9])
q()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz/specdata")
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
setwd("specdata")
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
setwd("specdata")
readdata <- read.csv(23)
i <- 1:100
paste(i, sep="")
paste(i, collapse=" ")
m <- read.csv("023.csv")
args(mean)
mean(m, na.rm = TRUE)
mean(m, na.rm = FALSE)
m
class(m)
m[1:2,]
n <- m[,2]
n[1:2]
n
mean(n, na.rm = FALSE)
mean(n, na.rm = TRUE)
n <- m[,2:3]
n
n[1:2]
n[1:5]
n[1:5,]
as.vector(n[1:5,])
q <- as.vector(n[1:5,])
q
m[1:5,"nitrate"]
getwd()
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
getwd()
rm(list = ls())
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
pollutantmean("specdata", "nitrate", 23)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
pollutantmean("specdata", "nitrate", 70:72)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
pollutantmean("specdata", "nitrate", 23)
getwd()
pollutantmean("specdata", "nitrate", 23)
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
pollutantmean("specdata", "nitrate", 23)
getwd()
setwd(..)
setwd("..")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
4.049973/3
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
?na.omit
?dim.data.frame
setwd("specdata")
readdata <- read.csv("001.csv")
dim.data.frame(readdata)
class(dim.data.frame(readdata))
readdata <- na.omit(read.csv("001.csv"))
dim.data.frame(readdata)[1]
setwd("..")
source("complete.R")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
setwd("..")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
setwd("..")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
?head
head(letters)
head(letters, n = -6L)
round(pollutantmean("specdata", "sulfate", 1:10), digits = 3)
round(pollutantmean("specdata", "nitrate", 70:72), digits = 3)
round(pollutantmean("specdata", "sulfate", 34), digits = 3)
round(pollutantmean("specdata", "nitrate"), digits = 3)
round(pollutantmean("specdata", "nitrate"), digits = 3)
setwd("..")
round(pollutantmean("specdata", "nitrate"), digits = 3)
setwd("..")
round(pollutantmean("specdata", "nitrate"), digits = 3)
setwd("..")
source("pollutantmean.R")
round(pollutantmean("specdata", "nitrate"), digits = 3)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
?as.data.frame
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
setwd("..")
source("complete.R")
setwd("F:/course/Data Science/R programming/Week 2/Assignments and quiz")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc["nobs"])
complete("specdata", 30:25)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc[2])
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc[,2])
complete("specdata", 54)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, 2])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
?c
View(complete)
View(complete)
View(complete)
rm(list = ls)
rm(list = ls())
q()
