sample(x[x >  8])
sample(x[x >  9])
q()
q()
lapply
x <- list(a = 1:5, b = rnorm(10))
x
?rnorm
x <-  list(a = 1:4, b = rnorm(10), c = rnorm(20,1), d = rnorm(100,5))
lapply(x, mean)
? runif
?rnorm
x <- 1:4
lapply(x, runif)
?rowSums
?rowsum
rowSums
x <- matrix(rnorm(200), 20, 10)
?quantile
args(quantile)
apply(x, 1, quantile, probs = c(0.25, 0.75))
?rowMeans
?mapply
?tapply
?gl
?split
?interaction
f1 <- gl(2,5)
f2 <-  gl(5,2)
interaction(f1,f2)
?str
str(1:12)
q()
?binom
?rbinom
choose(3,2)
?rbinom
q()
set.seed(1)
rpois(5, 2)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
q()
install.packages('RMySQL',type='source')
source('http://bioconductor.org/biocLite.R')
source("https://bioconductor.org/biocLite.R")
biocLite('rhdf5')
library(rhdf5)
library(XML)
library(RMySQL)
library(httr)
q()
library(data.table)
library(Hmisc)
library(plyr)
library(dplyr)
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_GDP.csv', skip = 4, nrows = 232))
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_EDSTATS_Country.csv'))
x <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_GDP.csv', skip = 4, nrows = 232))
y <- data.table(read.csv('C:/Users/hp/datasciencecoursera/Course3(Getting and Cleaning Data)/Week 3(Quiz)/getdata_data_EDSTATS_Country.csv'))
dt <- merge(x, y, by.x = 'X', by.y = 'CountryCode', all = TRUE)
dt1 <- arrange(dt, X.1)
dt2 <- group_by(dt1, Income.Group)
summarise(dt2, mean(X.1))
summarise(dt2, mean(X.1, na.rm = TRUE))
dt4 <- arrange(dt, desc(X.4))
dt4$X.4[38]
dt4$X.4[39]
dt4$X.4[40]
dt4$X.4
dt4 <- arrange(dt, desc(dt$X.4))
dt4$X.4
dt1$X.1
dt4 <- arrange(dt, desc(dt$X.4))
dt4$X.4
dtGDP <- x[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
dt <- merge(dtGDP, y, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
dt3 <- mutate(dt2, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt1, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt2, gdpGroup = cut2(X.1, g = 5))
dt3 <- mutate(dt1, gdpGroup = cut2(X.1, g = 5))
dt4 <- group_by(dt3, Income.Group)
summarise(dt2, mean(X.1))
xt <- xtabs(Freq~Income.Group+gdpGroup, data = dt3)
xt <- xtabs(Freq ~ Income.Group + gdpGroup, data = dt3)
table(dt3$gdpGroup,dt3$Income.Group)
names(dt)
tolower(names(dt))
library(stringr)
library(lubridate)
library(swirl)
swirl()
Sys.getlocale('LC_TIME')
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- row()
this_moment <- row(this_day)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 7, minutes = 11)
this_moment <- update(this_moment, hours = 7, minutes = 13, seconds = 14)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <-  update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
play()
how_long
nxt()
as.period(how_long)
stopwatch()
stopwatch()
View(stopwatch)
View(stopwatch)
q()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar = c(2,2,2,2))
par(mar = c(2,2,2,7))
plot(x,y)
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y,pch = 20)
plot(x,y,pch = 2)
plot(x,y,pch = 3)
plot(x,y,pch = 4)
q()
package_version(swirl())
package_version(swirl
)
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
q()
library(swirl)
swirl()
head(state)
state$region
table(state$region)
play()
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot("displ", "hwy", "mpg")
qplot("displ", "hwy", data = "mpg")
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na,rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "MOnth", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
par()
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
play()
?points
?pch
nxt()
with(airquality, points(Wind, Ozone, col = "blue", pch = 17))
with(may, points(Wind, Ozone, col = "blue", pch = 17))
points(may$Wind,may$Ozone,col="blue",pch=17)
play
play()
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
with(may, points(Wind, Ozone, col = "blue", pch = 17))
nxt()
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=*)
points(notmay$Wind,notmay$Ozone,col="red",pch=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", c(17,8), c("blue","red"), c("May","Other Months"))
points("topright", pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "airquality$Ozone")
play()
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
nxt()
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
play()
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
nxt()
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
library(data.table)
filePlot  <- fread("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week1/household_power_consumption.txt, sep = ";", header = TRUE, na.strings = "?")
filePlot  <- fread("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week1/household_power_consumption.txt, sep = ";", header = TRUE, na.strings = "?")
filePlot  <- fread("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week1/household_power_consumption.txt, sep = "auto", header = TRUE, na.strings = "?")
filePlot  <- fread("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week1/household_power_consumption.txt, header = TRUE, na.strings = "?")
.
)
,
;lhlhlh
library(data.table)
library(lubridate)
filePlot  <- fread("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week1/household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
head(filePlot)
dim(filePlot)
str(filePlot)
filePlot["Date"]
filePlot$Date <- dmy(filePlot$Date)
str(filePlot)
filePlot$Time <- hms(filePlot$Time)
str(filePlot)
filePlot1 < - subset(filePlot, Date == ymd("2007-02-01") | Date == ymd("2007-02-01"))
filePlot1 < - subset(filePlot, Date == ymd("2007-02-01") | Date == ymd("2007-02-01"))
filePlot1 <- filePlot
filePlot1 < - subset(filePlot, Date == ymd("2007-02-01") | Date == ymd("2007-02-01"))
filePlot1 < - subset(filePlot, Date >= ymd("2007-02-01") | Date <= ymd("2007-02-02"))
filePlot1 <- subset(filePlot, Date == ymd("2007-02-01") | Date == ymd("2007-02-01"))
str(filePlot1)
head(filePlot1)
dim(filePlot1)
dim(filePlot)
fp1 <- subset(filePlot, Date == ymd("2007-02-01") | Date == ymd("2007-02-02"))
dim(fp1)
head(fp1)
fp1 <- filePlot[Date == ymd("2007-02-01") | Date == ymd("2007-02-02")]
str(fp1)
head(fp1)
head(filePlot)
View(filePlot1)
q()
?transform
library(ggplot2)
library(datasets)
str(maacs)
str(mpg)
rep(0.2,4)
?rep
?seq
seq_along(5)
seq_along(1,5)
seq_along(1:5)
x <- 1:10
y <- c(1,6,9)
seq_along(x)
seq_along(y)
seq_len(x)
seq_len(1.97)
seq_len(10.97)
q()
?ryg
?rug
library(datasets)
str(airquality)
hist(airquality$Ozone, col = "blue")
rug(airquality$Ozone)
boxplot(Ozone ~ Month, data = airquality, col = "red")
range(airquality$Ozone)
range(airquality$Ozone, na.rm = TRUE)
table(airquality$Month)
?colorRamp
setwd("C:/Users/hp/datasciencecoursera/Course4(Exploratory Analysis)/Week 2")
library(swirl)
swirl()
sample(colours(), 10)
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1, len=6))
colorRampPalette(c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red,"yellow))
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(@))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"))
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,.3))
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
play()
qplot(displ, hwy, data = mpg, col = drv)
nxt()
qplot(displ, hwy, data = mpg, color = drv, geom = c("point, "smooth))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(p = hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv~hwy, data = mpg,geom = "boxplot")
qplot(drv,hwy, data = mpg, geom = "boxplot")
qplot(drv,hwy,data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg,fill = drv)
qplot(displ,hwy,data = mpg,facets = . ~ drv)
qplot(hwy,data = mpg,facets = .~drv, binwidth = 2)
qplot(hwy,data = mpg,facets = drv~., binwidth = 2)
swirl()
qplot(displ,hwy,data = mpg,geom = c("point,"smooth),facets = .~drv )
qplot(displ,hwy,data = mpg,geom = c("point","smooth"),facets = .~drv )
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = "drv"))
g+geom_point(aes(color = "drv"), size = 4, alpha = 1/2)
g+geom_point(aes(color = drv), size = 4, alpha = 1/2)
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement")+labs(y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement")+labs(y="Hwy Mileage")
g+geom_point(aes(color=drv),size =2,alpha=1/2)+geom_smooth(size =4,linetype = 3, method = "lm",se =FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_Family = "Times")
g+geom_point(aes(color = drv))+theme_bw(base_Family = "Times")
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx,myy,type = "l", ylim= c(-3,3))
g <- ggplot(testdat,aes(x = myx,y = myy))
g+geom_line
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g < - ggplot(mpg, aes(x= "displ", y="hwy",color = factor(year)))
g < - ggplot(mpg, aes(x = "displ", y = "hwy", color = factor(year)))
g < - ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g < - ggplot(mpg, aes(x = displ, y = hwy, color = factor(year))
)
g < - ggplot(mpg, aes(x = displ, y = hwy, color = factor()))
g < - ggplot(mpg, aes(x = displ, y = hwy, col = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm",se="FALSE",size=2,color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color = "black")+labs(x="Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds,binwidth=18497/30)
brk
counts
qplot(price, data = diamonds,binwidth=18497/30, fill = cut)
qplot(price, data = diamonds,geom = "density")
qplot(price, data = diamonds,geom = "density", color = drv)
qplot(price, data = diamonds,geom = "density", color = cut)
qplot(carat, price, data = "diamonds")
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, col = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut,facets = .~cut)+geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,len = 4),na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size =3,color = "pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(diamonds, aes(depth,price))
g
print(g)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col =" blue")
abline(h = 1.5, col ="blue")
abline(h = .4, col ="red")
5
12
abline(h = .05, col ="green")
